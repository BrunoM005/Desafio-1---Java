public class IntersecaoListas {

    static class No {
        int valor;
        No proximo;

        No(int valor) {
            this.valor = valor;
            this.proximo = null;
        }
    }

    static class ListaEncadeada {
        No inicio;

        public void inserir(int valor) {
            if (!contem(valor)) {
                No novo = new No(valor);
                if (inicio == null) {
                    inicio = novo;
                } else {
                    No atual = inicio;
                    while (atual.proximo != null) {
                        atual = atual.proximo;
                    }
                    atual.proximo = novo;
                }
            }
        }

        public boolean contem(int valor) {
            No atual = inicio;
            while (atual != null) {
                if (atual.valor == valor) {
                    return true;
                }
                atual = atual.proximo;
            }
            return false;
        }

        public void exibir() {
            No atual = inicio;
            while (atual != null) {
                System.out.print(atual.valor + " ");
                atual = atual.proximo;
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        ListaEncadeada L1 = new ListaEncadeada();
        ListaEncadeada L2 = new ListaEncadeada();
        ListaEncadeada L4 = new ListaEncadeada();

        // Inserindo elementos em L1
        L1.inserir(1);
        L1.inserir(2);
        L1.inserir(3);
        L1.inserir(6);

        // Inserindo elementos em L2
        L2.inserir(3);
        L2.inserir(4);
        L2.inserir(5);
        L2.inserir(6);

        No atualL1 = L1.inicio;
        while (atualL1 != null) {
            if (L2.contem(atualL1.valor)) {
                L4.inserir(atualL1.valor); // Se existe em L2, adiciona a L4
            }
            atualL1 = atualL1.proximo;
        }

        System.out.print("L4 (interseção de L1 e L2): ");
        L4.exibir(); // Esperado: 3 6
    }
}
